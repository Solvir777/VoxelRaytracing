#version 460
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
layout(r16ui, set = 0, binding = 0) readonly uniform uimage3D block_data;
layout(r8ui, set = 0, binding = 1) uniform uimage3D distance_data;

#include "../util.glsl"

void main() {
    ivec3 pos = ivec3(gl_GlobalInvocationID.xyz);
    ivec3 img_size = imageSize(block_data);

    uint seed = imageLoad(block_data, pos).x;

    // If current voxel is a seed, distance is 0
    if (seed != 0) {
        return;
    }

    uint min_dist = 255u;  // Default to max distance (8-bit storage)
    for(int x = 0; x < CHUNK_SIZE; x++) {
        for(int y = 0; y < CHUNK_SIZE; y++) {
            for(int z = 0; z < CHUNK_SIZE; z++) {
                ivec3 other_pos = ivec3(x, y, z);
                uint dist = chebyshev_length(pos - other_pos);
                if(other_pos == pos || dist > min_dist) continue;

                if(imageLoad(block_data, other_pos).x > 0) {
                    min_dist = min(min_dist, dist);
                }
            }
        }
    }

    imageStore(distance_data, pos, uvec4(min_dist));
}